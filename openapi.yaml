openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Inferred Url
tags:
  - name: vehicle-controller
    description: Vehicle Controller
paths:
  /v1/vehicles:
    get:
      tags:
        - vehicle-controller
      summary: Get list of vehicles
      operationId: getVehiclesUsingGET
      parameters:
        - name: marca
          in: query
          description: marca
          required: false
          style: form
          schema:
            type: string
        - name: modelo
          in: query
          description: modelo
          required: false
          style: form
          schema:
            type: string
        - name: matricula
          in: query
          description: matricula
          required: false
          style: form
          schema:
            type: string
        - name: color
          in: query
          description: color
          required: false
          style: form
          schema:
            type: string
        - name: anio
          in: query
          description: anio
          required: false
          style: form
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: true
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: Page size
          required: true
          style: form
          schema:
            type: integer
            format: int32
        - name: order
          in: query
          description: Sorting direction (ASC or DESC)
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: orderBy
          in: query
          description: Field to order by
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - vehicle-controller
      summary: Create a new vehicle
      operationId: createVehicleUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VehicleDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/vehicles/{vehicleId}:
    delete:
      tags:
        - vehicle-controller
      summary: Delete a vehicle
      operationId: deleteVehicleUsingDELETE
      parameters:
        - name: vehicleId
          in: path
          description: ID of the vehicle to delete
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - vehicle-controller
      summary: Update an existing vehicle
      operationId: updateVehicleUsingPATCH
      parameters:
        - name: vehicleId
          in: path
          description: ID of the vehicle to update
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VehicleDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  schemas:
    VehicleDto:
      title: VehicleDto
      required:
        - anio
        - color
        - marca
        - matricula
        - modelo
      type: object
      properties:
        anio:
          type: string
        color:
          type: string
        id:
          type: integer
          format: int64
        marca:
          type: string
        matricula:
          type: string
        modelo:
          type: string
